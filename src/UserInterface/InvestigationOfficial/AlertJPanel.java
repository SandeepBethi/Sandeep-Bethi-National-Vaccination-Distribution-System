/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.InvestigationOfficial;

import Business.Alert;
import Business.Business;
import Business.Vaccine;
import Business.VaccineDispositionRequest;
import Business.VaccineHistory;
import Business.VaccinePackage;
import Business.Enterprise;
import Business.CDCEnterprise;
import Business.ManufacturerEnterprise;
import Business.RevokeVaccineLicenseRequestRequest;
import Business.Transaction;
import Business.UserAccount;
import Business.WorkRequest;
import java.awt.CardLayout;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bethi
 */
public class AlertJPanel extends javax.swing.JPanel {
 JPanel userProcessContainer;
    Business business;
    UserAccount ua;
    ArrayList<VaccinePackage> dispositionList;
    
    Alert a;
    /**
     * Creates new form DrugCatalogJPanel
     */
    public AlertJPanel(JPanel userProcessContainer, Business business, UserAccount ua, Alert a,ArrayList<VaccinePackage> dispositionList) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.ua = ua;
        this.a=a;
        this.dispositionList=dispositionList;
        
        refreshsuspectTable();
        int selectetedRow = suspectedTable.getSelectedRow();
        if (selectetedRow < 0) {
            return;
        }
        VaccinePackage p = (VaccinePackage) suspectedTable.getValueAt(selectetedRow, 0);
        VaccineHistory dh=null;
        for(VaccineHistory dh1:business.getTransactionHistory().getVaccineHistoryList()){
            if(dh1.getdPackage()==p){
                dh=dh1;
            }
        }
        for(Transaction t:dh.getTransactionList()){
            cmbEnterprise.addItem(t.getSender());
        }
        
        
     JPanel panel = this;
        panel.setOpaque(false);
        panel.setPreferredSize(this.getPreferredSize());

    }
    ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/Resources/rsz_1blu2.jpg"));

    @Override
    protected void paintComponent(Graphics g) {
        g.drawImage(icon.getImage(), 0, 0, null);
        super.paintComponent(g);
    }

    
    private void refreshsuspectTable() {
        int rowCount = suspectedTable.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) suspectedTable.getModel()).removeRow(i);

        }

        
            for (VaccinePackage dPack : a.getPackageList()) {

                Object row[] = new Object[5];
                row[0] = dPack;
                row[1] = dPack.getPackageId();
                row[2] = dPack.getCartonId();
                row[3] = dPack.getDateOfExpiry().getTime().toString();
                row[4] = dPack.getStatus();


                ((DefaultTableModel) suspectedTable.getModel()).addRow(row);
            }

            
             if (suspectedTable.getRowCount() > 0) {
            suspectedTable.changeSelection(0, 0, false, false);
        }
            

        } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTestReport = new javax.swing.JTextArea();
        sendReportButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        suspectedTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cmbEnterprise = new javax.swing.JComboBox();

        buttonBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/nav_left_red.png"))); // NOI18N
        buttonBack.setText("back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Incident detail");

        txtTestReport.setColumns(20);
        txtTestReport.setRows(5);
        jScrollPane1.setViewportView(txtTestReport);

        sendReportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/navigate_right2.png"))); // NOI18N
        sendReportButton.setText("Send Alert and Dispose Vaccines");
        sendReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendReportButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Alert");

        suspectedTable.setAutoCreateRowSorter(true);
        suspectedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Vaccine", "Package ID", "Carton ID", "Expiry Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        suspectedTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suspectedTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(suspectedTable);

        jLabel3.setText("Incident Origin");

        cmbEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEnterpriseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sendReportButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 286, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBack)
                    .addComponent(sendReportButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed

        userProcessContainer.remove(this);

        CardLayout layout= (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_buttonBackActionPerformed

    private void sendReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendReportButtonActionPerformed
 int selectetedRow = suspectedTable.getSelectedRow();
 VaccinePackage p;       
 if(!cmbEnterprise.getSelectedItem().equals("None")){
 a.setIncidentOrigin((Enterprise)cmbEnterprise.getSelectedItem());
 }
 a.setIncidentDetail(txtTestReport.getText());
 if (selectetedRow < 0) {
            p=a.getPackageList().get(0);
        }else{
         p = (VaccinePackage) suspectedTable.getValueAt(selectetedRow, 0);
        
             }
 VaccineHistory dh=null;
        for(VaccineHistory dh1:business.getTransactionHistory().getVaccineHistoryList()){
            if(dh1.getdPackage()==p){
                dh=dh1;
            }
        }
        for(Transaction t:dh.getTransactionList()){
            t.getSender().getAlertList().add(a);
        }
        int s=dh.getTransactionList().size();
        if(dh.getTransactionList().get(s-1).getReceiver()==null){
           dh.getTransactionList().get(s-1).getPatient().getAlertList().add(a); 
        }else{
        dh.getTransactionList().get(s-1).getReceiver().getAlertList().add(a);
        }
        CDCEnterprise fent=(CDCEnterprise)business.getNetDir().getNetworkByUserAccount(ua).getEnterpriseByUserAccount(ua);
        fent.getAlertList().add(a);
        
        VaccineDispositionRequest ddr=new VaccineDispositionRequest();
        for(VaccinePackage dp:dispositionList){
            ddr.addPackage(dp);
        }
        CDCEnterprise fda=(CDCEnterprise)business.getNetDir().getNetworkByUserAccount(ua).getEnterpriseByUserAccount(ua);
        fda.getDrugDispositionOrg().getWorkQueue().addWR(ddr);
        ddr.setSender(ua);
        
                ddr.setStatus("Sent for Disposal");
                
                if(a.getIncidentOrigin().getClass().equals(ManufacturerEnterprise.class)){
                    ManufacturerEnterprise manu=(ManufacturerEnterprise)cmbEnterprise.getSelectedItem();
                    Vaccine d=a.getPackageList().get(0).getVaccine();
                    
                    RevokeVaccineLicenseRequestRequest rdl=new RevokeVaccineLicenseRequestRequest();
                    rdl.setManufacturerEnterprise(manu);
                    rdl.setVaccine(d);
                    
                    fda.getLicenseDept().getWorkQueue().addWR(rdl);
                    rdl.setSender(ua);
                    rdl.setStatus(WorkRequest.StatusType.AtLicenseDepartment.toString());
                    fda.getInvestigationOrg().getSentWorkQueue().addWR(rdl);
                }
                
                userProcessContainer.remove(this);

        CardLayout layout= (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer); 
        
    }//GEN-LAST:event_sendReportButtonActionPerformed

    private void cmbEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEnterpriseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbEnterpriseActionPerformed

    private void suspectedTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suspectedTableMouseClicked
        cmbEnterprise.removeAllItems();
        cmbEnterprise.addItem("None");
        
        int selectetedRow = suspectedTable.getSelectedRow();
        if (selectetedRow < 0) {
            return;
        }
        VaccinePackage p = (VaccinePackage) suspectedTable.getValueAt(selectetedRow, 0);
        VaccineHistory dh=null;
        for(VaccineHistory dh1:business.getTransactionHistory().getVaccineHistoryList()){
            if(dh1.getdPackage()==p){
                dh=dh1;
            }
        }
        for(Transaction t:dh.getTransactionList()){
            cmbEnterprise.addItem(t.getSender());
        }
    }//GEN-LAST:event_suspectedTableMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JComboBox cmbEnterprise;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton sendReportButton;
    private javax.swing.JTable suspectedTable;
    private javax.swing.JTextArea txtTestReport;
    // End of variables declaration//GEN-END:variables
}
