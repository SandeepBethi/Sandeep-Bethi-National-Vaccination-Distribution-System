/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.InvestigationOfficial;


import Business.Business;
import Business.Enterprise;
import Business.LabTestingRequest;
import Business.Network;
import Business.Organization;
import Business.ReportCDCRequest;
import Business.RequestForVaccines;
import Business.RevokeVaccineLicenseRequestRequest;
import Business.ShippingRequest;
import Business.UserAccount;
import Business.WorkRequest;
import java.awt.CardLayout;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bethi
 */
public class InvestigationDeptSentWorkQueueJPanel1 extends javax.swing.JPanel {

    Business b;
    private JPanel userProcessContainer;
    private UserAccount userAccount;

    /**
     * Creates new form InventorySentRequestJPanel
     */
    public InvestigationDeptSentWorkQueueJPanel1(JPanel upc, Business b, UserAccount ua) {
        initComponents();

        this.b=b;
        userProcessContainer = upc;
        userAccount = ua;

        refreshWorkReqTable();
    JPanel panel = this;
        panel.setOpaque(false);
        panel.setPreferredSize(this.getPreferredSize());

    }
    ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/Resources/vaccine.jpg"));

    @Override
    protected void paintComponent(Graphics g) {
        g.drawImage(icon.getImage(), 0, 0, null);
        super.paintComponent(g);
    }

    private void refreshWorkReqTable() {
        int rowCount = workReqTable.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) workReqTable.getModel()).removeRow(i);

        }
        Network net=b.getNetDir().getNetworkByUserAccount(userAccount);
        
        Enterprise enterprise=net.getEntDirectory().getEnterpriseByUserAccount(userAccount);
        Organization o = enterprise.getOrganizationByUserAccount(userAccount);
        for (WorkRequest wr : o.getWorkQueue().getWrList()) {
           if(wr.getClass().equals(ReportCDCRequest.class)){
                ReportCDCRequest mwr = (ReportCDCRequest) wr;
                Object row[] = new Object[5];
            row[0] = mwr;
            row[1] = WorkRequest.WRType.VaccineDispositionRequest.toString();
            
            row[2] = mwr.getSender();
            row[3] = mwr.getReceiver();
            row[4] = mwr.getStatus();
            
                
                ((DefaultTableModel) workReqTable.getModel()).addRow(row);
           }else  if(wr.getClass().equals(LabTestingRequest.class)){
               LabTestingRequest mwr = (LabTestingRequest) wr;
                Object row[] = new Object[7];
            row[0] = mwr;
            row[1] = WorkRequest.WRType.LabTestingRequest.toString();
            
            row[2] = mwr.getSender();
            row[3] = mwr.getReceiver();
            row[4] = mwr.getStatus();
           
            ((DefaultTableModel) workReqTable.getModel()).addRow(row);
           }else  if(wr.getClass().equals(RevokeVaccineLicenseRequestRequest.class)){
               RevokeVaccineLicenseRequestRequest mwr = (RevokeVaccineLicenseRequestRequest) wr;
                Object row[] = new Object[5];
            row[0] = mwr;
            row[1] = WorkRequest.WRType.RevokeVaccineLicenseRequestRequest.toString();
            
            row[2] = mwr.getVaccine();
            row[3] = mwr.getManufacturerEnterprise();
            row[4] = mwr.getStatus();
           
            ((DefaultTableModel) workReqTable.getModel()).addRow(row);
           }
        }
        if (workReqTable.getRowCount() > 0) {
            workReqTable.changeSelection(0, 0, true, true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workReqTable = new javax.swing.JTable();
        buttonBack = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Investigation Dept Sent Work Queue");

        workReqTable.setAutoCreateRowSorter(true);
        workReqTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request Date", "Type", "Sender/Vaccine", "Receiver/Manufacturer", "Status"
            }
        ));
        jScrollPane1.setViewportView(workReqTable);
        if (workReqTable.getColumnModel().getColumnCount() > 0) {
            workReqTable.getColumnModel().getColumn(1).setResizable(false);
        }

        buttonBack.setText("back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 769, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(buttonBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(jLabel1)))
                .addContainerGap(242, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                .addComponent(buttonBack)
                .addGap(67, 67, 67))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_buttonBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable workReqTable;
    // End of variables declaration//GEN-END:variables
}
